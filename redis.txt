---------------------------redis--------------------------------
一、哪儿用了redis?为什么用？
    哪儿用了：首页轮播广告
    为什么用：因为mysql是走硬盘，定不住高并发；redis是走内存;
二、redis是什么?
    redis是c语言开发的高性能的k-v数据库，数据存储在内存中
三、redis安装和启动
    1、安装
        yum install gcc-c++
        tar -zxvf redis-3.0.0.tar.gz
        cd /usr/upload/redis-3.0.0
        make
        make install PREFIX=/usr/local/redis
    2、启动和关闭
        cp /usr/upload/redis-3.0.0/redis.conf  /usr/local/redis/bin
        vim /usr/local/redis/bin/redis.conf：
            daemonize yes
        启动：
            ./redis-server redis.conf
        关闭：
            ./redis-cli -h 127.0.0.1 -p 6379 shutdown
四、redis基本命令
    keys *：查看所有key
    expire和ttl：设置和查看key的失效时间
    exists：判断key值是否存在
    incr和decr：自增和自减
五、redis的多数据库实例
    1、redis实例中提供了下标是0-15的16个数据库，不能修改下标，可通过select切换
    2、清空数据库的命令
          flushdb：清空当前数据库的数据
          flushall：清空所有数据库的数据
六、持久化
    1、RDB:默认(数据)
        策略：
            900 1
            300 10
            60 10000
        缺点：不能保证数据的完整性
        优点：不形象性能
        实验：
            1.删除dump.rdb
            2.set str abc
            3../redis-cli shutdown(生成持久化文件)

    2、AOF:(命令)
        策略：
            #appendfsync always
            appendfsync everysec
        优点:保证数据完整性
        缺点：影响性能
        实验：
            1.设置appendonly为yes
            2.set str abc
            3.等待1秒打开appendonly.aof

七、主从复制
    1、过程
        a.从会往主发送sync命令
        b.主会往从发送rdb文件
        c.主会往从发送写命令
    2.配置
        主：无需配置
        从：slaveof  主ip 主port

        实验：
            1.往主写数据，观察从是否同步
            2.关闭主，往从写数据(主死了从只能读)

八、redis集群
    1、redis集群是多少台？
        投票容错超过半数：3台       高可用：3台
    2、为什么集群中有一台挂了，则整个集群都挂了呢？
        redis集群中有16384个槽分给了3个节点，存取数据时：crc16(key)%16384=0~16383
    3、搭建步骤
        1、安装ruby环境
            yum install ruby
            yum install rubygems
            cd /usr/upload
            gem install redis-3.0.0.gem
            cd redis-3.0.0/src
            ll *.rb
        2、拷贝6台redis，并启动
            1)必须删除dump.rdb和appendonly.aof文件
            2)拷贝6个节点
                 cp -r /usr/local/redis /usr/local/redis-cluster/redis-7001
                 ... ...
            3)修改配置文件
                port 7001
                cluster-enable yes
                ... ...
            4)创建启动脚本(v-y-p)
                cd /usr/local/redis-cluster/redis-7001/bin
                ./redis-server redis.conf
                cd /usr/local/redis-cluster/redis-7002/bin
                ./redis-server redis.conf
                cd /usr/local/redis-cluster/redis-7003/bin
                ./redis-server redis.conf
                cd /usr/local/redis-cluster/redis-7004/bin
                ./redis-server redis.conf
                cd /usr/local/redis-cluster/redis-7005/bin
                ./redis-server redis.conf
                cd /usr/local/redis-cluster/redis-7006/bin
                ./redis-server redis.conf

       3、使用ruby脚本搭建redis集群
            cd /usr/upload/redis.3.0.0/src
            ./redis-trib.rb create --replicas 1 192.168.94.134:7001 192.168.94.134:7002 192.168.94.134:7003 192.168.94.134:7004 192.168.94.134:7005  192.168.94.134:7006
       4、测试
            ./redis-cli -c -p 7001








